apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app: kafka
  name: kafka
  namespace: default
spec:
  podManagementPolicy: OrderedReady
  replicas: 3
  revisionHistoryLimit: 1
  selector:
    matchLabels:
      app: kafka
  serviceName: kafka-headless
  template:
    metadata:
      labels:
        app: kafka
    spec:
      initContainers:
      - name: volume-permissions
        image: bitnami/minideb:stretch
        imagePullPolicy: Always
        command: ["chown", "-R", "1001:1001", "/bitnami/kafka"]
        securityContext:
          runAsUser: 0
        resources: {}
        volumeMounts:
        - name: datadir
          mountPath: /bitnami/kafka

      - name: init-config
        image: martinkaburu/kafka-init:v1alpha1
        env:
        - name: AWS_ACCESS_KEY
          value: ${AWS_ACCESS_KEY}
        - name: AWS_SECRET_ACCESS_KEY
          value: ${AWS_SECRET_ACCESS_KEY}
        - name: REGION
          value: ${REGION}
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: NODE_IP
          valueFrom:
            fieldRef:
               fieldPath: status.hostIP
        command: ['/bin/bash', '/bitnami/kafka/init.sh']
        volumeMounts:
        - name: kafka-config
          mountPath: /bitnami/kafka/
        - name: datadir
          mountPath: /opt/bitnami/kafka/conf/
      containers:
        - name: kafka-broker
          image: bitnami/kafka:2.3.0-debian-9-r88
          imagePullPolicy: IfNotPresent
          ports:
          - containerPort: 9092
            name: kafka
            protocol: TCP
          - containerPort: 9093
            name: kafka-external
            protocol: TCP
          env:
          - name: POD_IP
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.podIP
          - name: POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: KAFKA_HEAP_OPTS
            value: -Xmx1G -Xms1G
          - name: KAFKA_ZOOKEEPER_CONNECT
            value: kafka-zookeeper:2181
          - name: KAFKA_LOG_DIRS
            value: /opt/kafka/data/logs
          - name: KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR
            value: "3"
          - name: KAFKA_JMX_PORT
            value: "5555"
          - name: KAFKA_PORT_NUMBER
            value: "9092"
          - name: ALLOW_PLAINTEXT_LISTENER
            value: "true"
          - name: KAFKA_LISTENERS
            value: "PLAINTEXT://0.0.0.0:$(KAFKA_PORT_NUMBER)"
          - name: KAFKA_BROKER_USER
            value: "kafka"
          - name: KAFKA_BROKER_PASSWORD
            value: "kafkapass"
          - name: KAFKA_ZOOKEEPER_USER
            value: "zoouser"
          - name: KAFKA_ZOOKEEPER_PASSWORD
            value: "zoopass"
          - name: KAFKA_LOG_DIRS
            value: "/bitnami/kafka/data/logs"
          - name: KAFKA_CFG_NUM_PARTITIONS
            value: "3"
          - name: KAFKA_CFG_LOG_RETENTION_HOURS
            value: "168"
          - name: KAFKA_INTER_BROKER_USER
            value: "admin"
          - name: KAFKA_INTER_BROKER_PASSWORD
            value: "kafkapass"
          resources:
            limits:
              cpu: 500m
              memory: 1Gi
            requests:
              cpu: 200m
              memory: 512Mi
          volumeMounts:
            - name: datadir
              mountPath: /opt/bitnami/kafka/conf/

      volumes:
        - name: datadir
          emptyDir: {}

        - name: kafka-config
          configMap:
            name: kafka-config
